"""Use JSONB column

Revision ID: a57ed8e3c772
Revises: 1d21274c8737
Create Date: 2023-11-28 15:06:54.430565

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a57ed8e3c772'
down_revision: Union[str, None] = '1d21274c8737'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_temperaturemeasurement_created_at', table_name='temperaturemeasurement')
    op.drop_index('ix_temperaturemeasurement_depth_from_surface_cm', table_name='temperaturemeasurement')
    op.drop_index('ix_temperaturemeasurement_id', table_name='temperaturemeasurement')
    op.drop_index('ix_temperaturemeasurement_iterator', table_name='temperaturemeasurement')
    op.drop_index('ix_temperaturemeasurement_measurement_celsius', table_name='temperaturemeasurement')
    op.drop_index('ix_temperaturemeasurement_subsite_id', table_name='temperaturemeasurement')
    op.drop_index('ix_temperaturemeasurement_thermometer_characteristic', table_name='temperaturemeasurement')
    op.drop_index('ix_temperaturemeasurement_type', table_name='temperaturemeasurement')
    op.drop_table('temperaturemeasurement')
    op.drop_index('ix_luminositymeasurement_created_at', table_name='luminositymeasurement')
    op.drop_index('ix_luminositymeasurement_id', table_name='luminositymeasurement')
    op.drop_index('ix_luminositymeasurement_iterator', table_name='luminositymeasurement')
    op.drop_index('ix_luminositymeasurement_measurement_lux', table_name='luminositymeasurement')
    op.drop_index('ix_luminositymeasurement_subsite_id', table_name='luminositymeasurement')
    op.drop_table('luminositymeasurement')
    op.add_column('subsite', sa.Column('temperatures', sa.JSON(), nullable=True))
    op.add_column('subsite', sa.Column('luminosities', sa.JSON(), nullable=True))
    op.alter_column('subsite', 'site_id',
               existing_type=postgresql.UUID(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('subsite', 'site_id',
               existing_type=postgresql.UUID(),
               nullable=True)
    op.drop_column('subsite', 'luminosities')
    op.drop_column('subsite', 'temperatures')
    op.create_table('luminositymeasurement',
    sa.Column('measurement_lux', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('subsite_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('iterator', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['subsite_id'], ['subsite.id'], name='luminositymeasurement_subsite_id_fkey'),
    sa.PrimaryKeyConstraint('iterator', name='luminositymeasurement_pkey'),
    sa.UniqueConstraint('id', name='luminositymeasurement_id_key')
    )
    op.create_index('ix_luminositymeasurement_subsite_id', 'luminositymeasurement', ['subsite_id'], unique=False)
    op.create_index('ix_luminositymeasurement_measurement_lux', 'luminositymeasurement', ['measurement_lux'], unique=False)
    op.create_index('ix_luminositymeasurement_iterator', 'luminositymeasurement', ['iterator'], unique=False)
    op.create_index('ix_luminositymeasurement_id', 'luminositymeasurement', ['id'], unique=False)
    op.create_index('ix_luminositymeasurement_created_at', 'luminositymeasurement', ['created_at'], unique=False)
    op.create_table('temperaturemeasurement',
    sa.Column('measurement_celsius', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('thermometer_characteristic', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('depth_from_surface_cm', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('subsite_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('iterator', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['subsite_id'], ['subsite.id'], name='temperaturemeasurement_subsite_id_fkey'),
    sa.PrimaryKeyConstraint('iterator', name='temperaturemeasurement_pkey'),
    sa.UniqueConstraint('id', name='temperaturemeasurement_id_key')
    )
    op.create_index('ix_temperaturemeasurement_type', 'temperaturemeasurement', ['type'], unique=False)
    op.create_index('ix_temperaturemeasurement_thermometer_characteristic', 'temperaturemeasurement', ['thermometer_characteristic'], unique=False)
    op.create_index('ix_temperaturemeasurement_subsite_id', 'temperaturemeasurement', ['subsite_id'], unique=False)
    op.create_index('ix_temperaturemeasurement_measurement_celsius', 'temperaturemeasurement', ['measurement_celsius'], unique=False)
    op.create_index('ix_temperaturemeasurement_iterator', 'temperaturemeasurement', ['iterator'], unique=False)
    op.create_index('ix_temperaturemeasurement_id', 'temperaturemeasurement', ['id'], unique=False)
    op.create_index('ix_temperaturemeasurement_depth_from_surface_cm', 'temperaturemeasurement', ['depth_from_surface_cm'], unique=False)
    op.create_index('ix_temperaturemeasurement_created_at', 'temperaturemeasurement', ['created_at'], unique=False)
    # ### end Alembic commands ###
