"""init

Revision ID: 787a9f5289cc
Revises: 
Create Date: 2023-11-28 15:24:55.330086

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision: str = '787a9f5289cc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fieldcampaign',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_fieldcampaign_created_at'), 'fieldcampaign', ['created_at'], unique=False)
    op.create_index(op.f('ix_fieldcampaign_id'), 'fieldcampaign', ['id'], unique=False)
    op.create_index(op.f('ix_fieldcampaign_iterator'), 'fieldcampaign', ['iterator'], unique=False)
    op.create_index(op.f('ix_fieldcampaign_name'), 'fieldcampaign', ['name'], unique=False)
    op.create_geospatial_table('site',
    sa.Column('geom', Geometry(geometry_type='POINTZ', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('field_campaign_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['field_campaign_id'], ['fieldcampaign.id'], ),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_geospatial_index('idx_site_geom', 'site', ['geom'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_site_created_at'), 'site', ['created_at'], unique=False)
    op.create_index(op.f('ix_site_field_campaign_id'), 'site', ['field_campaign_id'], unique=False)
    op.create_index(op.f('ix_site_id'), 'site', ['id'], unique=False)
    op.create_index(op.f('ix_site_iterator'), 'site', ['iterator'], unique=False)
    op.create_index(op.f('ix_site_location'), 'site', ['location'], unique=False)
    op.create_index(op.f('ix_site_name'), 'site', ['name'], unique=False)
    op.create_geospatial_table('subsite',
    sa.Column('temperatures', sa.JSON(), nullable=True),
    sa.Column('luminosities', sa.JSON(), nullable=True),
    sa.Column('geom', Geometry(geometry_type='POINTZ', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('site_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=False),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_geospatial_index('idx_subsite_geom', 'subsite', ['geom'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_subsite_created_at'), 'subsite', ['created_at'], unique=False)
    op.create_index(op.f('ix_subsite_id'), 'subsite', ['id'], unique=False)
    op.create_index(op.f('ix_subsite_iterator'), 'subsite', ['iterator'], unique=False)
    op.create_index(op.f('ix_subsite_location'), 'subsite', ['location'], unique=False)
    op.create_index(op.f('ix_subsite_name'), 'subsite', ['name'], unique=False)
    op.create_index(op.f('ix_subsite_recorded_at'), 'subsite', ['recorded_at'], unique=False)
    op.create_index(op.f('ix_subsite_site_id'), 'subsite', ['site_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_subsite_site_id'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_recorded_at'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_name'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_location'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_iterator'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_id'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_created_at'), table_name='subsite')
    op.drop_geospatial_index('idx_subsite_geom', table_name='subsite', postgresql_using='gist', column_name='geom')
    op.drop_geospatial_table('subsite')
    op.drop_index(op.f('ix_site_name'), table_name='site')
    op.drop_index(op.f('ix_site_location'), table_name='site')
    op.drop_index(op.f('ix_site_iterator'), table_name='site')
    op.drop_index(op.f('ix_site_id'), table_name='site')
    op.drop_index(op.f('ix_site_field_campaign_id'), table_name='site')
    op.drop_index(op.f('ix_site_created_at'), table_name='site')
    op.drop_geospatial_index('idx_site_geom', table_name='site', postgresql_using='gist', column_name='geom')
    op.drop_geospatial_table('site')
    op.drop_index(op.f('ix_fieldcampaign_name'), table_name='fieldcampaign')
    op.drop_index(op.f('ix_fieldcampaign_iterator'), table_name='fieldcampaign')
    op.drop_index(op.f('ix_fieldcampaign_id'), table_name='fieldcampaign')
    op.drop_index(op.f('ix_fieldcampaign_created_at'), table_name='fieldcampaign')
    op.drop_table('fieldcampaign')
    # ### end Alembic commands ###
