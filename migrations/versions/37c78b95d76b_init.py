"""init

Revision ID: 37c78b95d76b
Revises: 
Create Date: 2023-11-08 15:37:31.038760

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision: str = '37c78b95d76b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_geospatial_table('area',
    sa.Column('geom', Geometry(geometry_type='POLYGON', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_geospatial_index('idx_area_geom', 'area', ['geom'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_area_id'), 'area', ['id'], unique=False)
    op.create_index(op.f('ix_area_name'), 'area', ['name'], unique=False)
    op.create_index(op.f('ix_area_uuid'), 'area', ['uuid'], unique=False)
    op.create_geospatial_table('sensor',
    sa.Column('geom', Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('area_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['area_id'], ['area.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_index('idx_sensor_geom', 'sensor', ['geom'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_sensor_id'), 'sensor', ['id'], unique=False)
    op.create_index(op.f('ix_sensor_name'), 'sensor', ['name'], unique=False)
    op.create_index(op.f('ix_sensor_uuid'), 'sensor', ['uuid'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sensor_uuid'), table_name='sensor')
    op.drop_index(op.f('ix_sensor_name'), table_name='sensor')
    op.drop_index(op.f('ix_sensor_id'), table_name='sensor')
    op.drop_geospatial_index('idx_sensor_geom', table_name='sensor', postgresql_using='gist', column_name='geom')
    op.drop_geospatial_table('sensor')
    op.drop_index(op.f('ix_area_uuid'), table_name='area')
    op.drop_index(op.f('ix_area_name'), table_name='area')
    op.drop_index(op.f('ix_area_id'), table_name='area')
    op.drop_geospatial_index('idx_area_geom', table_name='area', postgresql_using='gist', column_name='geom')
    op.drop_geospatial_table('area')
    # ### end Alembic commands ###
