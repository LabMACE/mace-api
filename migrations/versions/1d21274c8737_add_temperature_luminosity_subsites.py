"""Add Temperature, Luminosity, Subsites

Revision ID: 1d21274c8737
Revises: 1bb697b163b3
Create Date: 2023-11-27 16:52:52.802341

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision: str = '1d21274c8737'
down_revision: Union[str, None] = '1bb697b163b3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_geospatial_table('subsite',
    sa.Column('geom', Geometry(geometry_type='POINTZ', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('site_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=False),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_geospatial_index('idx_subsite_geom', 'subsite', ['geom'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_subsite_created_at'), 'subsite', ['created_at'], unique=False)
    op.create_index(op.f('ix_subsite_id'), 'subsite', ['id'], unique=False)
    op.create_index(op.f('ix_subsite_iterator'), 'subsite', ['iterator'], unique=False)
    op.create_index(op.f('ix_subsite_location'), 'subsite', ['location'], unique=False)
    op.create_index(op.f('ix_subsite_name'), 'subsite', ['name'], unique=False)
    op.create_index(op.f('ix_subsite_recorded_at'), 'subsite', ['recorded_at'], unique=False)
    op.create_index(op.f('ix_subsite_site_id'), 'subsite', ['site_id'], unique=False)
    op.create_table('luminositymeasurement',
    sa.Column('measurement_lux', sa.Float(), nullable=True),
    sa.Column('subsite_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['subsite_id'], ['subsite.id'], ),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_luminositymeasurement_created_at'), 'luminositymeasurement', ['created_at'], unique=False)
    op.create_index(op.f('ix_luminositymeasurement_id'), 'luminositymeasurement', ['id'], unique=False)
    op.create_index(op.f('ix_luminositymeasurement_iterator'), 'luminositymeasurement', ['iterator'], unique=False)
    op.create_index(op.f('ix_luminositymeasurement_measurement_lux'), 'luminositymeasurement', ['measurement_lux'], unique=False)
    op.create_index(op.f('ix_luminositymeasurement_subsite_id'), 'luminositymeasurement', ['subsite_id'], unique=False)
    op.create_table('temperaturemeasurement',
    sa.Column('measurement_celsius', sa.Float(), nullable=True),
    sa.Column('thermometer_characteristic', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('depth_from_surface_cm', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('subsite_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['subsite_id'], ['subsite.id'], ),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_temperaturemeasurement_created_at'), 'temperaturemeasurement', ['created_at'], unique=False)
    op.create_index(op.f('ix_temperaturemeasurement_depth_from_surface_cm'), 'temperaturemeasurement', ['depth_from_surface_cm'], unique=False)
    op.create_index(op.f('ix_temperaturemeasurement_id'), 'temperaturemeasurement', ['id'], unique=False)
    op.create_index(op.f('ix_temperaturemeasurement_iterator'), 'temperaturemeasurement', ['iterator'], unique=False)
    op.create_index(op.f('ix_temperaturemeasurement_measurement_celsius'), 'temperaturemeasurement', ['measurement_celsius'], unique=False)
    op.create_index(op.f('ix_temperaturemeasurement_subsite_id'), 'temperaturemeasurement', ['subsite_id'], unique=False)
    op.create_index(op.f('ix_temperaturemeasurement_thermometer_characteristic'), 'temperaturemeasurement', ['thermometer_characteristic'], unique=False)
    op.create_index(op.f('ix_temperaturemeasurement_type'), 'temperaturemeasurement', ['type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_temperaturemeasurement_type'), table_name='temperaturemeasurement')
    op.drop_index(op.f('ix_temperaturemeasurement_thermometer_characteristic'), table_name='temperaturemeasurement')
    op.drop_index(op.f('ix_temperaturemeasurement_subsite_id'), table_name='temperaturemeasurement')
    op.drop_index(op.f('ix_temperaturemeasurement_measurement_celsius'), table_name='temperaturemeasurement')
    op.drop_index(op.f('ix_temperaturemeasurement_iterator'), table_name='temperaturemeasurement')
    op.drop_index(op.f('ix_temperaturemeasurement_id'), table_name='temperaturemeasurement')
    op.drop_index(op.f('ix_temperaturemeasurement_depth_from_surface_cm'), table_name='temperaturemeasurement')
    op.drop_index(op.f('ix_temperaturemeasurement_created_at'), table_name='temperaturemeasurement')
    op.drop_table('temperaturemeasurement')
    op.drop_index(op.f('ix_luminositymeasurement_subsite_id'), table_name='luminositymeasurement')
    op.drop_index(op.f('ix_luminositymeasurement_measurement_lux'), table_name='luminositymeasurement')
    op.drop_index(op.f('ix_luminositymeasurement_iterator'), table_name='luminositymeasurement')
    op.drop_index(op.f('ix_luminositymeasurement_id'), table_name='luminositymeasurement')
    op.drop_index(op.f('ix_luminositymeasurement_created_at'), table_name='luminositymeasurement')
    op.drop_table('luminositymeasurement')
    op.drop_index(op.f('ix_subsite_site_id'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_recorded_at'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_name'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_location'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_iterator'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_id'), table_name='subsite')
    op.drop_index(op.f('ix_subsite_created_at'), table_name='subsite')
    op.drop_geospatial_index('idx_subsite_geom', table_name='subsite', postgresql_using='gist', column_name='geom')
    op.drop_geospatial_table('subsite')
    # ### end Alembic commands ###
